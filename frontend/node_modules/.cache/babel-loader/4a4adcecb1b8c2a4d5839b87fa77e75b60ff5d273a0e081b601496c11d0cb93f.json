{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rutr5\\\\lionta\\\\frontend\\\\src\\\\components\\\\VerificarCuenta.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerificarCuenta = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [mensaje, setMensaje] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [procesando, setProcesando] = useState(false);\n  const [tokenValido, setTokenValido] = useState(true);\n\n  // Validar que haya un token\n  useEffect(() => {\n    if (!token) {\n      setTokenValido(false);\n      setMensaje(\"Token no válido. Por favor, solicita un nuevo enlace de verificación.\");\n    }\n  }, [token]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validación de contraseñas\n    if (password !== confirmPassword) {\n      setMensaje(\"Las contraseñas no coinciden\");\n      return;\n    }\n    if (password.length < 6) {\n      setMensaje(\"La contraseña debe tener al menos 6 caracteres\");\n      return;\n    }\n    setProcesando(true);\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/verificar/${token}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          nueva_contraseña: password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMensaje(\"Cuenta verificada exitosamente. Redirigiendo al inicio de sesión...\");\n        setTimeout(() => {\n          navigate(\"/\");\n        }, 3000);\n      } else {\n        setMensaje(data.error || \"Error al verificar la cuenta\");\n        setTokenValido(false);\n      }\n    } catch (error) {\n      console.error(\"Error de conexión:\", error);\n      setMensaje(\"Error de conexión con el servidor\");\n    } finally {\n      setProcesando(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verificar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verificaci\\xF3n de Cuenta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), mensaje && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mensaje.includes(\"exitosamente\") ? \"success-message\" : \"error-message\",\n      children: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), tokenValido ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"verificar-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Establece tu contrase\\xF1a para activar tu cuenta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Nueva contrase\\xF1a:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          className: \"form-control\",\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirmar contrase\\xF1a:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true,\n          className: \"form-control\",\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: procesando,\n        children: procesando ? \"Procesando...\" : \"Verificar y Establecer Contraseña\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-token\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"El enlace que est\\xE1s utilizando es inv\\xE1lido o ha expirado. Por favor, contacta al administrador para solicitar un nuevo enlace de verificaci\\xF3n.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/\"),\n        className: \"btn btn-primary\",\n        children: \"Volver al inicio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(VerificarCuenta, \"K8JzCB87kadQ20BhjjKBwHWp5Mc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = VerificarCuenta;\nexport default VerificarCuenta;\nvar _c;\n$RefreshReg$(_c, \"VerificarCuenta\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","VerificarCuenta","_s","token","navigate","password","setPassword","confirmPassword","setConfirmPassword","mensaje","setMensaje","loading","setLoading","procesando","setProcesando","tokenValido","setTokenValido","handleSubmit","e","preventDefault","length","response","fetch","method","headers","body","JSON","stringify","nueva_contraseña","data","json","ok","setTimeout","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","onSubmit","htmlFor","type","id","value","onChange","target","required","minLength","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rutr5/lionta/frontend/src/components/VerificarCuenta.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst VerificarCuenta = () => {\r\n  const { token } = useParams();\r\n  const navigate = useNavigate();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [procesando, setProcesando] = useState(false);\r\n  const [tokenValido, setTokenValido] = useState(true);\r\n\r\n  // Validar que haya un token\r\n  useEffect(() => {\r\n    if (!token) {\r\n      setTokenValido(false);\r\n      setMensaje(\"Token no válido. Por favor, solicita un nuevo enlace de verificación.\");\r\n    }\r\n  }, [token]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validación de contraseñas\r\n    if (password !== confirmPassword) {\r\n      setMensaje(\"Las contraseñas no coinciden\");\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      setMensaje(\"La contraseña debe tener al menos 6 caracteres\");\r\n      return;\r\n    }\r\n\r\n    setProcesando(true);\r\n\r\n    try {\r\n      const response = await fetch(`http://127.0.0.1:5000/verificar/${token}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          nueva_contraseña: password,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMensaje(\"Cuenta verificada exitosamente. Redirigiendo al inicio de sesión...\");\r\n        setTimeout(() => {\r\n          navigate(\"/\");\r\n        }, 3000);\r\n      } else {\r\n        setMensaje(data.error || \"Error al verificar la cuenta\");\r\n        setTokenValido(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error de conexión:\", error);\r\n      setMensaje(\"Error de conexión con el servidor\");\r\n    } finally {\r\n      setProcesando(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"verificar-container\">\r\n      <h2>Verificación de Cuenta</h2>\r\n      \r\n      {mensaje && (\r\n        <div className={mensaje.includes(\"exitosamente\") ? \"success-message\" : \"error-message\"}>\r\n          {mensaje}\r\n        </div>\r\n      )}\r\n\r\n      {tokenValido ? (\r\n        <form onSubmit={handleSubmit} className=\"verificar-form\">\r\n          <p>Establece tu contraseña para activar tu cuenta:</p>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Nueva contraseña:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              className=\"form-control\"\r\n              minLength=\"6\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"confirmPassword\">Confirmar contraseña:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n              className=\"form-control\"\r\n              minLength=\"6\"\r\n            />\r\n          </div>\r\n          \r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            disabled={procesando}\r\n          >\r\n            {procesando ? \"Procesando...\" : \"Verificar y Establecer Contraseña\"}\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <div className=\"invalid-token\">\r\n          <p>\r\n            El enlace que estás utilizando es inválido o ha expirado. Por favor, \r\n            contacta al administrador para solicitar un nuevo enlace de verificación.\r\n          </p>\r\n          <button\r\n            onClick={() => navigate(\"/\")}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Volver al inicio\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificarCuenta;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAM,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC7B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,KAAK,EAAE;MACVa,cAAc,CAAC,KAAK,CAAC;MACrBN,UAAU,CAAC,uEAAuE,CAAC;IACrF;EACF,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAId,QAAQ,KAAKE,eAAe,EAAE;MAChCG,UAAU,CAAC,8BAA8B,CAAC;MAC1C;IACF;IAEA,IAAIL,QAAQ,CAACe,MAAM,GAAG,CAAC,EAAE;MACvBV,UAAU,CAAC,gDAAgD,CAAC;MAC5D;IACF;IAEAI,aAAa,CAAC,IAAI,CAAC;IAEnB,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCnB,KAAK,EAAE,EAAE;QACvEoB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,gBAAgB,EAAEvB;QACpB,CAAC;MACH,CAAC,CAAC;MAEF,MAAMwB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAElC,IAAIT,QAAQ,CAACU,EAAE,EAAE;QACfrB,UAAU,CAAC,qEAAqE,CAAC;QACjFsB,UAAU,CAAC,MAAM;UACf5B,QAAQ,CAAC,GAAG,CAAC;QACf,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,MAAM;QACLM,UAAU,CAACmB,IAAI,CAACI,KAAK,IAAI,8BAA8B,CAAC;QACxDjB,cAAc,CAAC,KAAK,CAAC;MACvB;IACF,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CvB,UAAU,CAAC,mCAAmC,CAAC;IACjD,CAAC,SAAS;MACRI,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEd,OAAA;IAAKmC,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCpC,OAAA;MAAAoC,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE9B/B,OAAO,iBACNT,OAAA;MAAKmC,SAAS,EAAE1B,OAAO,CAACgC,QAAQ,CAAC,cAAc,CAAC,GAAG,iBAAiB,GAAG,eAAgB;MAAAL,QAAA,EACpF3B;IAAO;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN,EAEAzB,WAAW,gBACVf,OAAA;MAAM0C,QAAQ,EAAEzB,YAAa;MAACkB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBACtDpC,OAAA;QAAAoC,QAAA,EAAG;MAA+C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEtDxC,OAAA;QAAKmC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBpC,OAAA;UAAO2C,OAAO,EAAC,UAAU;UAAAP,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnDxC,OAAA;UACE4C,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,UAAU;UACbC,KAAK,EAAEzC,QAAS;UAChB0C,QAAQ,EAAG7B,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;UACRd,SAAS,EAAC,cAAc;UACxBe,SAAS,EAAC;QAAG;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENxC,OAAA;QAAKmC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBpC,OAAA;UAAO2C,OAAO,EAAC,iBAAiB;UAAAP,QAAA,EAAC;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9DxC,OAAA;UACE4C,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,iBAAiB;UACpBC,KAAK,EAAEvC,eAAgB;UACvBwC,QAAQ,EAAG7B,CAAC,IAAKV,kBAAkB,CAACU,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;UACpDG,QAAQ;UACRd,SAAS,EAAC,cAAc;UACxBe,SAAS,EAAC;QAAG;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENxC,OAAA;QACE4C,IAAI,EAAC,QAAQ;QACbT,SAAS,EAAC,iBAAiB;QAC3BgB,QAAQ,EAAEtC,UAAW;QAAAuB,QAAA,EAEpBvB,UAAU,GAAG,eAAe,GAAG;MAAmC;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,gBAEPxC,OAAA;MAAKmC,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BpC,OAAA;QAAAoC,QAAA,EAAG;MAGH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJxC,OAAA;QACEoD,OAAO,EAAEA,CAAA,KAAMhD,QAAQ,CAAC,GAAG,CAAE;QAC7B+B,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC5B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtC,EAAA,CAhIID,eAAe;EAAA,QACDJ,SAAS,EACVC,WAAW;AAAA;AAAAuD,EAAA,GAFxBpD,eAAe;AAkIrB,eAAeA,eAAe;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}