{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rutr5\\\\lionta\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loginError, setLoginError] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const loggedIn = localStorage.getItem(\"isLoggedIn\") === \"true\";\n    if (token && loggedIn) {\n      setIsLoggedIn(true);\n      setUser(JSON.parse(localStorage.getItem(\"user\")));\n    }\n  }, []);\n\n  // Función para iniciar sesión\n  const login = async (email, password, rememberMe = true) => {\n    setIsLoading(true);\n    setLoginError(null);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email,\n          contraseña: password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Si se autenticó correctamente\n        if (data.token) {\n          localStorage.setItem(\"token\", data.token);\n        } else {\n          console.warn(\"No se recibió un token del servidor\");\n        }\n        if (rememberMe) {\n          localStorage.setItem(\"isLoggedIn\", \"true\");\n          localStorage.setItem(\"user\", JSON.stringify(data.usuario));\n        }\n        setIsLoggedIn(true);\n        setUser(data.usuario);\n        return data;\n      } else {\n        // Si hubo un error de autenticación\n        const errorMsg = data.error || \"Error al iniciar sesión\";\n        setLoginError(errorMsg);\n        throw new Error(errorMsg);\n      }\n    } catch (error) {\n      console.error(\"Error en login:\", error);\n      const errorMsg = error.message || \"Error de conexión con el servidor\";\n      setLoginError(errorMsg);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Función para cerrar sesión\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    setIsLoggedIn(false);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      setIsLoggedIn,\n      user,\n      setUser,\n      login,\n      logout,\n      isLoading,\n      loginError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"f1ipi1XWeb6RY6q/bVvL/Lk2h4A=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","user","setUser","isLoading","setIsLoading","loginError","setLoginError","token","localStorage","getItem","loggedIn","JSON","parse","login","email","password","rememberMe","response","fetch","method","headers","body","stringify","contraseña","data","json","ok","setItem","console","warn","usuario","errorMsg","error","Error","message","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rutr5/lionta/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loginError, setLoginError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const loggedIn = localStorage.getItem(\"isLoggedIn\") === \"true\";\r\n\r\n    if (token && loggedIn) {\r\n      setIsLoggedIn(true);\r\n      setUser(JSON.parse(localStorage.getItem(\"user\")));\r\n    }\r\n  }, []);\r\n\r\n  // Función para iniciar sesión\r\n  const login = async (email, password, rememberMe = true) => {\r\n    setIsLoading(true);\r\n    setLoginError(null);\r\n    \r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: email,\r\n          contraseña: password,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (response.ok) {\r\n        // Si se autenticó correctamente\r\n        if (data.token) {\r\n          localStorage.setItem(\"token\", data.token);\r\n        } else {\r\n          console.warn(\"No se recibió un token del servidor\");\r\n        }\r\n        \r\n        if (rememberMe) {\r\n          localStorage.setItem(\"isLoggedIn\", \"true\");\r\n          localStorage.setItem(\"user\", JSON.stringify(data.usuario));\r\n        }\r\n        \r\n        setIsLoggedIn(true);\r\n        setUser(data.usuario);\r\n        return data;\r\n      } else {\r\n        // Si hubo un error de autenticación\r\n        const errorMsg = data.error || \"Error al iniciar sesión\";\r\n        setLoginError(errorMsg);\r\n        throw new Error(errorMsg);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error en login:\", error);\r\n      const errorMsg = error.message || \"Error de conexión con el servidor\";\r\n      setLoginError(errorMsg);\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Función para cerrar sesión\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"isLoggedIn\");\r\n    localStorage.removeItem(\"user\");\r\n    setIsLoggedIn(false);\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider \r\n      value={{ \r\n        isLoggedIn, \r\n        setIsLoggedIn, \r\n        user, \r\n        setUser, \r\n        login, \r\n        logout,\r\n        isLoading,\r\n        loginError\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}