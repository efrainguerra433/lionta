{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rutr5\\\\lionta\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loginError, setLoginError] = useState(null);\n\n  // Verificar si hay un token almacenado al cargar la aplicación\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Configurar el token en los headers de Axios\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n          // Obtener datos del usuario actual\n          const response = await axios.get('/api/usuarios/perfil');\n          setUser(response.data);\n        } catch (error) {\n          console.error(\"Error verificando la sesión:\", error);\n          localStorage.removeItem('token');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n      }\n    };\n    checkLoggedIn();\n  }, []);\n\n  // Función de login\n  const login = async (email, password, rememberMe = true) => {\n    setIsLoading(true);\n    setLoginError(null);\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        usuario\n      } = response.data;\n\n      // Guardar token según preferencia del usuario\n      if (rememberMe) {\n        localStorage.setItem('token', token);\n      } else {\n        sessionStorage.setItem('token', token);\n      }\n\n      // Configurar Axios para incluir el token en futuras peticiones\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(usuario);\n      setIsLoading(false);\n      return usuario;\n    } catch (error) {\n      console.error(\"Error de login:\", error);\n      setLoginError('Credenciales incorrectas o cuenta no verificada');\n      setIsLoading(false);\n      throw error;\n    }\n  };\n\n  // Función de logout\n  const logout = () => {\n    localStorage.removeItem('token');\n    sessionStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      isLoading,\n      loginError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"IKEcrFXq9qgZVDWfllTIf4ZSfHs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","loginError","setLoginError","checkLoggedIn","token","localStorage","getItem","defaults","headers","common","response","get","data","error","console","removeItem","login","email","password","rememberMe","post","usuario","setItem","sessionStorage","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rutr5/lionta/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loginError, setLoginError] = useState(null);\r\n\r\n  // Verificar si hay un token almacenado al cargar la aplicación\r\n  useEffect(() => {\r\n    const checkLoggedIn = async () => {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (token) {\r\n        try {\r\n          // Configurar el token en los headers de Axios\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          \r\n          // Obtener datos del usuario actual\r\n          const response = await axios.get('/api/usuarios/perfil');\r\n          setUser(response.data);\r\n        } catch (error) {\r\n          console.error(\"Error verificando la sesión:\", error);\r\n          localStorage.removeItem('token');\r\n          delete axios.defaults.headers.common['Authorization'];\r\n        }\r\n      }\r\n    };\r\n\r\n    checkLoggedIn();\r\n  }, []);\r\n\r\n  // Función de login\r\n  const login = async (email, password, rememberMe = true) => {\r\n    setIsLoading(true);\r\n    setLoginError(null);\r\n    \r\n    try {\r\n      const response = await axios.post('/api/auth/login', { email, password });\r\n      const { token, usuario } = response.data;\r\n      \r\n      // Guardar token según preferencia del usuario\r\n      if (rememberMe) {\r\n        localStorage.setItem('token', token);\r\n      } else {\r\n        sessionStorage.setItem('token', token);\r\n      }\r\n      \r\n      // Configurar Axios para incluir el token en futuras peticiones\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setUser(usuario);\r\n      setIsLoading(false);\r\n      return usuario;\r\n    } catch (error) {\r\n      console.error(\"Error de login:\", error);\r\n      setLoginError('Credenciales incorrectas o cuenta no verificada');\r\n      setIsLoading(false);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Función de logout\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    sessionStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ \r\n      user, \r\n      login, \r\n      logout, \r\n      isLoading,\r\n      loginError \r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}