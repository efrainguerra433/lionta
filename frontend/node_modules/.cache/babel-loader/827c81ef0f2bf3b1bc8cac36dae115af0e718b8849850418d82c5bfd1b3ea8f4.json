{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johne\\\\OneDrive\\\\Documentos\\\\Efrain\\\\Lionta\\\\frontend\\\\src\\\\components\\\\MetricasUsuario.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport RegistrarMetrica from \"./RegistrarMetrica\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetricasUsuario = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Obtiene el ID del usuario desde la URL\n  const usuarioId = parseInt(id, 10); // Convierte el ID a un número\n\n  const [metricas, setMetricas] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  // Obtener las métricas del usuario al cargar el componente\n  useEffect(() => {\n    const fetchMetricas = async () => {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/usuario/${usuarioId}/metricas`);\n        if (response.ok) {\n          const data = await response.json();\n          setMetricas(data);\n        } else {\n          const errorData = await response.json();\n          setError(errorData.error || \"Error al obtener las métricas\");\n        }\n      } catch (error) {\n        setError(\"Error al conectar con el servidor\");\n      }\n    };\n    fetchMetricas();\n  }, [usuarioId]);\n\n  // Función para manejar el registro de una nueva métrica\n  const handleMetricaRegistrada = () => {\n    // Actualiza la lista de métricas después de registrar una nueva\n    const fetchMetricas = async () => {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/usuario/${usuarioId}/metricas`);\n        if (response.ok) {\n          const data = await response.json();\n          setMetricas(data);\n        }\n      } catch (error) {\n        console.error(\"Error al actualizar métricas:\", error);\n      }\n    };\n    fetchMetricas();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"M\\xE9tricas del Usuario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(RegistrarMetrica, {\n      usuarioId: usuarioId,\n      onMetricaRegistrada: handleMetricaRegistrada\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de M\\xE9tricas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), metricas.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay m\\xE9tricas registradas para este usuario.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Posici\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Altura\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Peso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Velocidad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Aceleraci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: metricas.map(metrica => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: metrica.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: metrica.posicion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: metrica.edad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: metrica.altura\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: metrica.peso\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: metrica.velocidad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: metrica.aceleracion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, metrica.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(MetricasUsuario, \"TXwJq8P7FMEhuXMVI1RSKYMSHAE=\", false, function () {\n  return [useParams];\n});\n_c = MetricasUsuario;\nexport default MetricasUsuario;\nvar _c;\n$RefreshReg$(_c, \"MetricasUsuario\");","map":{"version":3,"names":["React","useState","useEffect","useParams","RegistrarMetrica","jsxDEV","_jsxDEV","MetricasUsuario","_s","id","usuarioId","parseInt","metricas","setMetricas","error","setError","fetchMetricas","response","fetch","ok","data","json","errorData","handleMetricaRegistrada","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onMetricaRegistrada","length","map","metrica","posicion","edad","altura","peso","velocidad","aceleracion","_c","$RefreshReg$"],"sources":["C:/Users/johne/OneDrive/Documentos/Efrain/Lionta/frontend/src/components/MetricasUsuario.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport RegistrarMetrica from \"./RegistrarMetrica\";\r\n\r\nconst MetricasUsuario = () => {\r\n  const { id } = useParams(); // Obtiene el ID del usuario desde la URL\r\n  const usuarioId = parseInt(id, 10); // Convierte el ID a un número\r\n\r\n  const [metricas, setMetricas] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Obtener las métricas del usuario al cargar el componente\r\n  useEffect(() => {\r\n    const fetchMetricas = async () => {\r\n      try {\r\n        const response = await fetch(`http://127.0.0.1:5000/usuario/${usuarioId}/metricas`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setMetricas(data);\r\n        } else {\r\n          const errorData = await response.json();\r\n          setError(errorData.error || \"Error al obtener las métricas\");\r\n        }\r\n      } catch (error) {\r\n        setError(\"Error al conectar con el servidor\");\r\n      }\r\n    };\r\n\r\n    fetchMetricas();\r\n  }, [usuarioId]);\r\n\r\n  // Función para manejar el registro de una nueva métrica\r\n  const handleMetricaRegistrada = () => {\r\n    // Actualiza la lista de métricas después de registrar una nueva\r\n    const fetchMetricas = async () => {\r\n      try {\r\n        const response = await fetch(`http://127.0.0.1:5000/usuario/${usuarioId}/metricas`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setMetricas(data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al actualizar métricas:\", error);\r\n      }\r\n    };\r\n\r\n    fetchMetricas();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Métricas del Usuario</h1>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      {/* Formulario para registrar una nueva métrica */}\r\n      <RegistrarMetrica usuarioId={usuarioId} onMetricaRegistrada={handleMetricaRegistrada} />\r\n\r\n      {/* Tabla para mostrar las métricas existentes */}\r\n      <h2>Lista de Métricas</h2>\r\n      {metricas.length === 0 ? (\r\n        <p>No hay métricas registradas para este usuario.</p>\r\n      ) : (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Posición</th>\r\n              <th>Edad</th>\r\n              <th>Altura</th>\r\n              <th>Peso</th>\r\n              <th>Velocidad</th>\r\n              <th>Aceleración</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {metricas.map((metrica) => (\r\n              <tr key={metrica.id}>\r\n                <td>{metrica.id}</td>\r\n                <td>{metrica.posicion}</td>\r\n                <td>{metrica.edad}</td>\r\n                <td>{metrica.altura}</td>\r\n                <td>{metrica.peso}</td>\r\n                <td>{metrica.velocidad}</td>\r\n                <td>{metrica.aceleracion}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MetricasUsuario;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}